// gist-data.js - Handles loading and saving queries from/to GitHub Gist

const GIST_ID = 'your_gist_id_here'; // Replace with your Gist ID
const GIST_FILE = 'queries.json'; // Replace with your Gist filename
const GITHUB_TOKEN = 'your_github_token_here'; // Replace with your GitHub token (handle securely!)

async function loadQuestionsFromGist() {
    try {
        const response = await fetch(`https://api.github.com/gists/${GIST_ID}`);
        if (!response.ok) {
            throw new Error(\`HTTP error! status: \${response.status}\`);
        }
        const data = await response.json();
        const content = data.files[GIST_FILE].content;
        const gistData = JSON.parse(content);

        setQuestions(gistData);

    } catch (error) {
        console.error('Error loading questions from Gist:', error);
        alert('Failed to load data from Gist. Starting with empty data.');
        setQuestions([]);
    }
}

async function saveQuestionsToGist(questions) {
    try {
        const response = await fetch(\`https://api.github.com/gists/\${GIST_ID}\`, {
            method: 'PATCH',
            headers: {
                'Authorization': \`token \${GITHUB_TOKEN}\`,
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                files: {
                    [GIST_FILE]: {
                        content: JSON.stringify(questions, null, 2)
                    }
                }
            })
        });

        if (!response.ok) {
            throw new Error(\`HTTP error! status: \${response.status}\`);
        }

        console.log('Questions saved to Gist successfully!');
    } catch (error) {
        console.error('Error saving questions to Gist:', error);
        alert('Failed to save data to Gist.');
    }
}

